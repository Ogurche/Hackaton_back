"""докинул таблы 

Revision ID: 74c640017e0c
Revises: 841a0dfd9ae6
Create Date: 2023-09-19 01:53:02.613805

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '74c640017e0c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('promo_info')
    op.drop_table('user')
    op.drop_table('user_info')
    op.drop_table('promo_categories')
    op.drop_table('categories')
    op.drop_table('transport')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_table('snils')
    op.drop_table('session')
    op.drop_table('promo')
    op.drop_table('auth')
    op.drop_table('partners')
    op.drop_table('card')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('card',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('expire_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('card_num', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='card_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='card_pkey')
    )
    op.create_table('partners',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('partners_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('partner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('partner_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='partners_category_id_fkey'),
    sa.ForeignKeyConstraint(['info_id'], ['user_info.id'], name='partners_info_id_fkey'),
    sa.ForeignKeyConstraint(['partner_id'], ['promo.id'], name='partners_partner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='partners_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth',
    sa.Column('login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_info', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_info'], ['user_info.id'], name='auth_user_info_fkey'),
    sa.PrimaryKeyConstraint('login', name='auth_pkey')
    )
    op.create_table('promo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('promo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('partner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('promo_category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isactive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.id'], name='promo_partner_id_fkey'),
    sa.ForeignKeyConstraint(['promo_category_id'], ['promo_categories.id'], name='promo_promo_category_id_fkey'),
    sa.ForeignKeyConstraint(['promo_id'], ['promo_info.id'], name='promo_promo_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='promo_pkey')
    )
    op.create_table('session',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('conductor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transport_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conductor_id'], ['user.id'], name='session_conductor_id_fkey'),
    sa.ForeignKeyConstraint(['transport_id'], ['transport.id'], name='session_transport_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='session_pkey')
    )
    op.create_table('snils',
    sa.Column('snils_num', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='snils_user_id_fkey'),
    sa.PrimaryKeyConstraint('snils_num', name='snils_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('user_info_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('patronymic', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_info_id'], ['user_info.id'], name='users_user_info_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('transport',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transport_num', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='transport_pkey')
    )
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='categories_pkey')
    )
    op.create_table('promo_categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('categorie_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='promo_categories_pkey')
    )
    op.create_table('user_info',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_info_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('phone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mail', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('site', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_info_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('user_info', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('patronymic', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_info'], ['user_info.id'], name='user_user_info_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    op.create_table('promo_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('adv', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='promo_info_pkey')
    )
    # ### end Alembic commands ###
